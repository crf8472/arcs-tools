\mainpage ARCS Tools - @PROJECT_BRIEF_DESC@


\section Home

See the [project repository](https://github.com/crf8472/arcs-tools)


\section features Features

Arcs-tools provide an example implementation of the libarcstk feature set. The
toolkit supports the following tasks for working with AccurateRip checksums:

- Verify AccurateRip checksums against their reference sums from AccurateRip.
- Calculate the AccurateRip checksums of a sequence of audio samples, may it
  be a single track or an album.
- Calculate the AccurateRip ID of a CD from its TOC information (along with the
  request URL and the canonical response filename).
- Parse the responses of AccurateRip ("dBAR-format") to plaintext.



\section nonfeatures Non-features

- No ripping of CDs.
- Does not send any requests to AccurateRip. Has no network facilities and is
  not supposed to get any. The actual HTTP request for fetching the reference
  values is better performed by the HTTP client of your choice.



\section howtobuild How to Build

Build and install to just use the API:

	$ cd arcs-tools      # your project root directory where README.md resides
	$ mkdir build && cd build
	$ cmake -DCMAKE_BUILD_TYPE=Release ..
	$ cmake --build .
	$ sudo make install  # installs to /usr/local

Note that arcs-tools need [libarcstk][1] and [libarcsdec][2] to compile.

If the first cmake call issues an error that reads "Could NOT find libarcsdec",
check whether the dependencies are properly installed. Locally, I deploy these
libs to ``/usr/local`` when testing them. My CMake will therefore not find them
unless the path is explicitly specified as part of the prefix when configuring
arcs-tools:

	$ cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=/usr/local ..

If you do not intend to install the dependencies locally for development, you
can instead pull them as submodules by doing:

	$ git submodule init
	$ git submodule update
	$ cmake -DCMAKE_BUILD_TYPE=Release -DWITH_SUBMODULES=ON ..

This documentation was generated from commit
[@GIT_VERSION_STRING@](@PROJECT_URL@/commit/@GIT_COMMIT_ID@).

[1]: https://github.com/crf8472/libarcstk
[2]: https://github.com/crf8472/libarcsdec
