/*!

\page arcstk-verify

\brief Calculate AccurateRip checksums locally

\version @PROJECT_VERSION@



\section SYNOPSIS

arcstk-verify [OPTIONS] AUDIOFILE1 AUDIOFILE2 ...


\section DESCRIPTION

Calculates AccurateRip checksums from losslessly encoded audiofiles and
TOC information and verifies them against reference checksums.

\copydoc inc_calcdesc

The reference checksums are mandatory. They either can be specified by the name
of a binary file (some dBAR-*.bin file) using \b -r or can be piped in via
stdin. Reference checksums can also be passed as a comma-separated list of
\b --refvalues that are parsed as hexadecimal numbers.

The result will be the "best possible" match, i.e. the result of the comparison
that provided the least number of non-identical checksums for an index position
in the input. The number of these "non-matches" in the compared set is called
"difference", e.g. if all but two checksums match, the difference is 2 and all
but the corresponding two files or tracks can be considered verified.

The output declares reference checksums as "Theirs", while the actual checksums
are declared "Mine". Matches of checksums will be marked with symbol "==" in the
corresponding table cell. For a non-matching checksum, the corresponding table
cell will contain the respective checksum.

Switch \b --print-all-matches shows any comparison that was actually performed
in the output, regardless of v2 or v1 or whether a match was found.


\section OPTIONS

\subsection INPUT Options for processing input

\copydoc inc_helpopt

\par -r,--response=RESPONSEFILE
Specify the binary file with the AccurateRip response. Parsed text files will
not be accepted. If \b --response is absent, the binary content as provided
by AccurateRip is expected on stdin.

\par --refvalues=0x111,0x222,0x333,...
Comma-separated list of hexadecimal values (with or without leading base marker
'0x') that are treated as reference values for verification. When using
\b --refvalues any \b --metafile is ignored and therefore no TOC information
and no AccurateRip URL or ID is available. Therefore \b --print-id and
\b --print-url are without effect if \b --refvalues is present.

\par --no-first
Do not process the first of the audiofiles as first track of an album.
See also \b --no-last and \b --no-album.

\par --no-last
Do not process the last of the audiofiles as last track of an album.
See also \b --no-first and \b --no-album.

\par --no-album
Abbreviates \b --no-first \b --no-last to suppress calculating a first and a
last track. This switch is intended for cases in which only some tracks of an
album are to be verified.

\copydoc inc_infoptions

\copydoc inc_procoptions


\subsection OUTPUT Options for output

\copydoc inc_calcoutoptions

\par --colors,--colors=[TYPE:COLOR]
\manonly
.sp 1
TYPE is one of: MATCH, MISMATCH, MINE
.sp 1
COLOR is one of:
FG_BLACK, FG_RED, FG_GREEN, FG_YELLOW, FG_BLUE, FG_MAGENTA, FG_CYAN, FG_WHITE,
FG_DEFAULT,
BG_BLACK, BG_RED, BG_GREEN, BG_YELLOW, BG_BLUE, BG_MAGENTA, BG_CYAN, BG_WHITE,
BG_DEFAULT
.sp 1
\endmanonly
Use colored output for match results. This is only useful for output printed to
CLI. Output to a file will be cluttered with ANSI escape sequences. If used
without a parameter, \b --colors will use the default colors, which are FG_GREEN
for matches, FG_RED for mismatches and FG_DEFAULT for locally computed checksums
a.k.a. "MINE". A comma-separated list of pairs of a type name and color name
separated by a colon ':' is accepted as an optional parameter. Both names are
parsed case insensitive. If a list of colors is passed, all default colors will
be ignored, hence every TYPE that is not assigned a color in the list is printed
as FG_DEFAULT regardless whether it has a default color. MATCH defines the color
for "Theirs" matching "Mine". Accordingly, MISMATCH defines the color for
"Theirs" checksums not matching "Mine". MINE defines the color for "Mine"
checksums.

\par --print-id
Print the AccurateRip id of the reference data, if available.

\par --print-url
Print the AccurateRip URL of the reference data, if available.

\par --print-all-matches
Print each match result for each reference block. If combined with
\b --refvalues, the effect is just to activate the output of the match result
for ARCSv2 as well as ARCSv1.

\par -b,--boolean
Return the difference of the best match. Hence, 0 indicates a successful
verification and some value bigger than 0 indicates that some input tracks
could not be verified. The result only informs whether some reference block
could be matched for either ARCSv2 or ARCSv1.

\par -n,--no-output
Do not print any result. Implies \b --boolean, therefore the return value will
be informative.

\copydoc inc_calcinfooptions

\copydoc inc_outfileopt

\copydoc inc_logfileopt

\copydoc inc_logoptions

\copydoc inc_versionopt


\section EXAMPLES

\subsection ALBUMTOCM 1. Album + TOC, using the audio files specified in the TOC

You have: An album ripped to a single audio file, say fLaC, or a set of files
and the TOC (as CUESheet). The CUESheet specifies the actual audiofiles, may it
be a single file or one file per track. You saved the checksums from AccurateRip
in a local dBAR file (see man 1 arcstk-parse).

$ arcstk-verify -r dBAR-some_id.bin -m myalbum/toc.cue



\subsection ALBUMTOCF 2. Album + TOC, overriding the files in the TOC, if any


\par a) Single audio file

You have: An album ripped to a single audio file, say fLaC, and the TOC as
CUESheet. The CUESheet specifies audio files, but you want to override them with
\c myalbum/album_rip.flac instead. You saved the checksums from AccurateRip in a
local dBAR file (see man 1 arcstk-parse).

$ arcstk-verify -r dBAR-some_id.bin -m myalbum/toc.cue myalbum/album_rip.flac


\par b) One audio file per track

You have: An album ripped one-file-per-track to a set of fLaC files, and the TOC
as a CUESheet. The CUESheet is stored elsewhere or references WAV files, so you
want to override its file references. You saved the checksums from AccurateRip
in a local dBAR file (see man 1 arcstk-parse).

$ arcstk-verify -r dBAR-some_id.bin -m myalbum/toc.cue myalbum/track_1.flac myalbum/track_2.flac ...



\subsection ALBUMFILES 3. Audiofiles forming an album, but no TOC

You have: A set of audio files that you know to form an album, but there is no
TOC information. The filenames are such that the first filename is also the
first track and the last filename is the last track of the album. You saved the
checksums from AccurateRip in a local dBAR file (see man 1 arcstk-parse).

$ arcstk-verify -r dBAR-some_id.bin --album myalbum/f1.flac myalbum/f2.flac ...


\subsection FILES 4. Some audiofiles but no TOC

You have: A set of audiofiles that do not form an album in the passed order,
e.g. the mapping from files to tracks is not known. You saved the checksums of
some possibly matching album from AccurateRip in a local dBAR file
(see man 1 arcstk-parse).

$ arcstk-verify -r dBAR-some_id.bin myalbum/track_1.flac myalbum/track_2.flac ...

If you know that \c track_1.flac is the first track, declare it accordingly:

$ arcstk-verify -r dBAR-some_id.bin --first myalbum/track_1.flac myalbum/track_2.flac ...

If you know that \c track_15.flac is the last track, declare it accordingly:

$ arcstk-verify -r dBAR-some_id.bin --last myalbum/track_1.flac ... myalbum/track_15.flac

\b NOTE The number of audiofiles passed must be equal to the track count of the
album.


\section BUGS

\copydoc inc_buginfo


\section COPYRIGHT

\copydoc inc_license


\section SEEALSO SEE ALSO

@TOOL_NAME_ID@(1), @TOOL_NAME_CALC@(1), @TOOL_NAME_PARSE@(1)

*/
