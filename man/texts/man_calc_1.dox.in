/*!

\page @TOOL_NAME_CALC@

\brief Calculate AccurateRip checksums locally

\version @PROJECT_VERSION@



\section SYNOPSIS

@TOOL_NAME_CALC@ [OPTIONS] AUDIOFILE1 AUDIOFILE2 ...


\section DESCRIPTION

Calculates AccurateRip checksums from losslessly encoded audiofiles and
TOC information.

\copydoc inc_calcdesc


\section OPTIONS

\subsection INPUT Options for processing input

\copydoc inc_calcinoptions


\subsection OUTPUT Options for output

\par --no-v1
Do not output ARCSs v1. Default is OFF which prints ARCSs v1 as well as ARCSs
v2. Since, however, the ARCSv1 checksum is effectively a subtotal of the ARCSv2
checksum, ARCSv1 will effectively have to be calculated. Therefore, this switch
will not result in making the calculation consume less time. Combining this
switch with --no-v2 will result in doing nothing.

\par --no-v2
Do not calculate and output ARCSs v2. Default is OFF which calculates and
output ARCSs v1 as well as v2. By specifiying \b --no-v2 the calculation of
ARCSv2 is suppressed. Combining this switch with \b --no-v1 will result in doing
nothing.

\copydoc inc_calcinfooptions

\copydoc inc_outfileopt

\copydoc inc_logfileopt

\copydoc inc_logoptions

\copydoc inc_versionopt


\section EXAMPLES

\subsection ALBUMTOCM 1. Album + TOC, using the audio files specified in the TOC

You have: An album ripped to a single audio file, say fLaC, or a set of files
and the TOC (as CUESheet). The CUESheet specifies the actual audiofiles, may it
be a single file or one file per track.

You want: The ARCSs of each track.

$ @TOOL_NAME_CALC@ -m myalbum/toc.cue


\subsection ALBUMTOCF 2. Album + TOC, overriding the files in the TOC, if any


\par a) Single audio file

You have: An album ripped to a single audio file, say fLaC, and the TOC as
CUESheet. The CUESheet specifies audio files, but you want to override them with
\c foo/foo.flac instead.

$ @TOOL_NAME_CALC@ -m myalbum/toc.cue myalbum/album_rip.flac


\par b) One audio file per track

You have: An album ripped one-file-per-track to a set of fLaC files, and the TOC
as a CUESheet. The CUESheet is stored elsewhere or references WAV files, so you
want to override its file references.

$ @TOOL_NAME_CALC@ -m myalbum/toc.cue myalbum/track_1.flac myalbum/track_2.flac ...


\subsection ALBUMFILES 3. Audiofiles forming an album, but no TOC

You have: A set of audio files that you know to form an album, but there is no
TOC information. The filenames are such that the first filename is also the
first track and the last filename is the last track of the album.

$ @TOOL_NAME_CALC@ --album myalbum/track_1.flac myalbum/track_2.flac ...


\subsection FILES 4. Some audiofiles but no TOC

You have: A set of audiofiles that do not form an album. (Either the album is
missing the first or last track or the tracks are completely unrelated.)


\par a) Unrelated intermediate tracks or nothing known

The following just applies the AccurateRip algorithm for \e intermediate tracks
(i.e. that are neither first nor last track) to any input file:

$ @TOOL_NAME_CALC@ myalbum/\*.flac

Of course you can specifiy the order of the filenames explicitly:

$ @TOOL_NAME_CALC@ myalbum/f1.flac myalbum/f2.flac ...


\par a) First or last track known but album incomplete

For each call you may or may not specifiy exactly one first and one last track.
These correspond with the first and last of the audio filenames you pass, but
only if the switches \b --first or \b --last explicitly declare that either
first or last position in the audio filename list should be treated
specifically.

If you know that \c f1.flac is the first track, pass the file as first of
the audio files and declare it accordingly:

$ @TOOL_NAME_CALC@ --first myalbum/f1.flac myalbum/f2.flac ...

If you know that \c f17.flac is the last track, pass the file as last of the
audio files and declare it accordingly:

$ @TOOL_NAME_CALC@ --last myalbum/f1.flac myalbum/f12.flac ... myalbum/f17.flac


\section BUGS

\copydoc inc_buginfo


\section COPYRIGHT

\copydoc inc_license


\section SEEALSO SEE ALSO

@TOOL_NAME_ID@(1), @TOOL_NAME_PARSE@(1), @TOOL_NAME_VERIFY@(1)

*/
